We make use of jena jars:
http://jena.sourceforge.net/downloads.html

The scenarios are concerned with the "company" data structure.
That is, there are hierarchically organized departments.
There are managers and other employees.
Those have names and they receive a salary.

In org.softlang.util lives "RDFCompanyBuilder" to build company models. 
This package also contains "CompanyConstants", where we collect rdf properties and namespace URIs.

In org.softlang.pureJena we make use of a statement iterator to total and cut company salaries and check certain constraints.

org.softlang.arq contains the same functionalities, but we use SPARQL and Jena's query engine ARQ to implement them.

Demo code can be found in org.softlang.(pureJena|arq).main .

